package com.misys.tiplus2.customisation.entity.persister;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.misys.tiplus2.persistent.EntityPersister;
import com.misys.tiplus2.customisation.entity.GVPF;
import com.misys.tiplus2.customisation.entity.GVPF.Key_GVPF;

@SuppressWarnings("unchecked")
public class GVPFPersister extends EntityPersister {

	// This code will be generated by the builder 
	
	public GVPFPersister() {
		setKeyMembers(new MemberDescriptor[] {
            new MemberDescriptor("bank_ent", "GVPF.BANK_ENT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvbrnm", "GVPF.GVBRNM", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvccy", "GVPF.GVCCY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcus1sbb", "GVPF.GVCUS1SBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcus1", "GVPF.GVCUS1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gving", "GVPF.GVING", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvmvt", "GVPF.GVMVT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvprf", "GVPF.GVPRF", getBinderFactory().getBinderForType("String")),
		});
			
		setMembers(new MemberDescriptor[] {
            new MemberDescriptor("date_dl", "GVPF.DATE_DL", getBinderFactory().getBinderForType("BigDecimal")),
            new MemberDescriptor("gvabf", "GVPF.GVABF", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvanf", "GVPF.GVANF", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvasf", "GVPF.GVASF", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvclcc", "GVPF.GVCLCC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvclc", "GVPF.GVCLC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcusc", "GVPF.GVCUSC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcus", "GVPF.GVCUS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("mnt_in_bo", "GVPF.MNT_IN_BO", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvnrd", "GVPF.GVNRD", getBinderFactory().getBinderForType("BigDecimal")),
            new MemberDescriptor("gvnaacc", "GVPF.GVNAACC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvswb", "GVPF.GVSWB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvswbr", "GVPF.GVSWBR", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcnas", "GVPF.GVCNAS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvswl", "GVPF.GVSWL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcus1csbb", "GVPF.GVCUS1CSBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvcus1c", "GVPF.GVCUS1C", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvna1", "GVPF.GVNA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvna2", "GVPF.GVNA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvna3", "GVPF.GVNA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvna4", "GVPF.GVNA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvnatlit", "GVPF.GVNATLIT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvoanc", "GVPF.GVOANC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvyins", "GVPF.GVYINS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("clearid", "GVPF.CLEARID", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("clearmbe", "GVPF.CLEARMBE", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tigvnar", "GVPF.TIGVNAR", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvnst", "GVPF.GVNST", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvnst_mbe", "GVPF.GVNST_MBE", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvacct", "GVPF.GVACCT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_acc", "GVPF.SLL_ACC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_sbank", "GVPF.SLL_SBANK", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_sbrn", "GVPF.SLL_SBRN", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_sctr", "GVPF.SLL_SCTR", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_sloc", "GVPF.SLL_SLOC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_sbb", "GVPF.SLL_SBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_mnm", "GVPF.SLL_MNM", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_na1", "GVPF.SLL_NA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_na2", "GVPF.SLL_NA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_na3", "GVPF.SLL_NA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_na4", "GVPF.SLL_NA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("sll_tlit", "GVPF.SLL_TLIT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvsha", "GVPF.GVSHA", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvsrc", "GVPF.GVSRC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvuc1", "GVPF.GVUC1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvuc2", "GVPF.GVUC2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode1", "GVPF.TIMECODE1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet1", "GVPF.TIMEDET1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode2", "GVPF.TIMECODE2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet2", "GVPF.TIMEDET2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode3", "GVPF.TIMECODE3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet3", "GVPF.TIMEDET3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvxm", "GVPF.GVXM", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvvianost", "GVPF.GVVIANOST", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("gvsccy", "GVPF.GVSCCY", getBinderFactory().getBinderForType("String")),
		});

		setForeignKeyMappings(new ForeignKeyMappingDescriptor[] {
		});
	}

    private static final String tableName = "GVPF";

    /**
     * Gets the table name - in this case GVPF
     * <p>
     * Note that the <i>schema</i> must be prefixed to this when constructing
     * SQL statements, for example: <code>schema.GVPF</code>
     * 
     * @return the table name
     */
	@Override
	public String getTableName() {       
		return tableName;
	}

	@Override
	public Class<?> getEntityClass() {
		return GVPF.class;
	}

	public Class<?> getKeyClass() {
		return Key_GVPF.class;
	}

	@Override
	public GVPF constructEntity(final Object[] keyValues, final Object[] resultRow) {
		final GVPF entity = new GVPF();
		
		// Key members
		final Key_GVPF key = entity.get$key();
		assignKeyValues(key, keyValues);

		assignMemberValues(entity, resultRow);
		
		return entity;
	}
	
	@Override
	public Key_GVPF constructKey(final Object[] keyValues) {
		final Key_GVPF key = new Key_GVPF();
		assignKeyValues(key, keyValues);
		return key;
	}
	
	@Override
	public void assignKeyValues(final Object object, final Object[] resultRow) {
		final Key_GVPF result = (Key_GVPF)object;
		int index = 0;
		result.setBank_ent((java.lang.String)resultRow[index++]);
		result.setGvbrnm((java.lang.String)resultRow[index++]);
		result.setGvccy((java.lang.String)resultRow[index++]);
		result.setGvcus1sbb((java.lang.String)resultRow[index++]);
		result.setGvcus1((java.lang.String)resultRow[index++]);
		result.setGving((java.lang.String)resultRow[index++]);
		result.setGvmvt((java.lang.String)resultRow[index++]);
		result.setGvprf((java.lang.String)resultRow[index++]);
	}
	
	@Override
	public void assignMemberValues(final Object object, final Object[] resultRow) {
		final GVPF result = (GVPF)object;
		int index = 0;
		result.setDate_dl((java.math.BigDecimal)resultRow[index++]);
		result.setGvabf((java.lang.String)resultRow[index++]);
		result.setGvanf((java.lang.String)resultRow[index++]);
		result.setGvasf((java.lang.String)resultRow[index++]);
		result.setGvclcc((java.lang.String)resultRow[index++]);
		result.setGvclc((java.lang.String)resultRow[index++]);
		result.setGvcusc((java.lang.String)resultRow[index++]);
		result.setGvcus((java.lang.String)resultRow[index++]);
		result.setMnt_in_bo((java.lang.String)resultRow[index++]);
		result.setGvnrd((java.math.BigDecimal)resultRow[index++]);
		result.setGvnaacc((java.lang.String)resultRow[index++]);
		result.setGvswb((java.lang.String)resultRow[index++]);
		result.setGvswbr((java.lang.String)resultRow[index++]);
		result.setGvcnas((java.lang.String)resultRow[index++]);
		result.setGvswl((java.lang.String)resultRow[index++]);
		result.setGvcus1csbb((java.lang.String)resultRow[index++]);
		result.setGvcus1c((java.lang.String)resultRow[index++]);
		result.setGvna1((java.lang.String)resultRow[index++]);
		result.setGvna2((java.lang.String)resultRow[index++]);
		result.setGvna3((java.lang.String)resultRow[index++]);
		result.setGvna4((java.lang.String)resultRow[index++]);
		result.setGvnatlit((java.lang.String)resultRow[index++]);
		result.setGvoanc((java.lang.String)resultRow[index++]);
		result.setGvyins((java.lang.String)resultRow[index++]);
		result.setClearid((java.lang.String)resultRow[index++]);
		result.setClearmbe((java.lang.String)resultRow[index++]);
		result.setTigvnar((java.lang.String)resultRow[index++]);
		result.setGvnst((java.lang.String)resultRow[index++]);
		result.setGvnst_mbe((java.lang.String)resultRow[index++]);
		result.setGvacct((java.lang.String)resultRow[index++]);
		result.setSll_acc((java.lang.String)resultRow[index++]);
		result.setSll_sbank((java.lang.String)resultRow[index++]);
		result.setSll_sbrn((java.lang.String)resultRow[index++]);
		result.setSll_sctr((java.lang.String)resultRow[index++]);
		result.setSll_sloc((java.lang.String)resultRow[index++]);
		result.setSll_sbb((java.lang.String)resultRow[index++]);
		result.setSll_mnm((java.lang.String)resultRow[index++]);
		result.setSll_na1((java.lang.String)resultRow[index++]);
		result.setSll_na2((java.lang.String)resultRow[index++]);
		result.setSll_na3((java.lang.String)resultRow[index++]);
		result.setSll_na4((java.lang.String)resultRow[index++]);
		result.setSll_tlit((java.lang.String)resultRow[index++]);
		result.setGvsha((java.lang.String)resultRow[index++]);
		result.setGvsrc((java.lang.String)resultRow[index++]);
		result.setGvuc1((java.lang.String)resultRow[index++]);
		result.setGvuc2((java.lang.String)resultRow[index++]);
		result.setTimecode1((java.lang.String)resultRow[index++]);
		result.setTimedet1((java.lang.String)resultRow[index++]);
		result.setTimecode2((java.lang.String)resultRow[index++]);
		result.setTimedet2((java.lang.String)resultRow[index++]);
		result.setTimecode3((java.lang.String)resultRow[index++]);
		result.setTimedet3((java.lang.String)resultRow[index++]);
		result.setGvxm((java.lang.String)resultRow[index++]);
		result.setGvvianost((java.lang.String)resultRow[index++]);
		result.setGvsccy((java.lang.String)resultRow[index++]);
	}

	@Override
	public Object[] getKeyMemberValues(final Object object) {
		final Key_GVPF entity = (Key_GVPF)object;
		final Object[] result = new Object[8];
		int index = 0;
		result[index++] = entity.getBank_ent();
		result[index++] = entity.getGvbrnm();
		result[index++] = entity.getGvccy();
		result[index++] = entity.getGvcus1sbb();
		result[index++] = entity.getGvcus1();
		result[index++] = entity.getGving();
		result[index++] = entity.getGvmvt();
		result[index++] = entity.getGvprf();
		return result;
	}

	@Override
	public Object[] getMemberValues(final Object object) {
		final GVPF entity = (GVPF)object;
		final Object[] result = new Object[55];
		int index = 0;
		result[index++] = entity.getDate_dl();
		result[index++] = entity.getGvabf();
		result[index++] = entity.getGvanf();
		result[index++] = entity.getGvasf();
		result[index++] = entity.getGvclcc();
		result[index++] = entity.getGvclc();
		result[index++] = entity.getGvcusc();
		result[index++] = entity.getGvcus();
		result[index++] = entity.getMnt_in_bo();
		result[index++] = entity.getGvnrd();
		result[index++] = entity.getGvnaacc();
		result[index++] = entity.getGvswb();
		result[index++] = entity.getGvswbr();
		result[index++] = entity.getGvcnas();
		result[index++] = entity.getGvswl();
		result[index++] = entity.getGvcus1csbb();
		result[index++] = entity.getGvcus1c();
		result[index++] = entity.getGvna1();
		result[index++] = entity.getGvna2();
		result[index++] = entity.getGvna3();
		result[index++] = entity.getGvna4();
		result[index++] = entity.getGvnatlit();
		result[index++] = entity.getGvoanc();
		result[index++] = entity.getGvyins();
		result[index++] = entity.getClearid();
		result[index++] = entity.getClearmbe();
		result[index++] = entity.getTigvnar();
		result[index++] = entity.getGvnst();
		result[index++] = entity.getGvnst_mbe();
		result[index++] = entity.getGvacct();
		result[index++] = entity.getSll_acc();
		result[index++] = entity.getSll_sbank();
		result[index++] = entity.getSll_sbrn();
		result[index++] = entity.getSll_sctr();
		result[index++] = entity.getSll_sloc();
		result[index++] = entity.getSll_sbb();
		result[index++] = entity.getSll_mnm();
		result[index++] = entity.getSll_na1();
		result[index++] = entity.getSll_na2();
		result[index++] = entity.getSll_na3();
		result[index++] = entity.getSll_na4();
		result[index++] = entity.getSll_tlit();
		result[index++] = entity.getGvsha();
		result[index++] = entity.getGvsrc();
		result[index++] = entity.getGvuc1();
		result[index++] = entity.getGvuc2();
		result[index++] = entity.getTimecode1();
		result[index++] = entity.getTimedet1();
		result[index++] = entity.getTimecode2();
		result[index++] = entity.getTimedet2();
		result[index++] = entity.getTimecode3();
		result[index++] = entity.getTimedet3();
		result[index++] = entity.getGvxm();
		result[index++] = entity.getGvvianost();
		result[index++] = entity.getGvsccy();
		return result;
	}

	@Override
	public Object[] getMemberValuesForMember(final String memberName, final Object object) {
		throw new IllegalArgumentException("Not a complex member: " + memberName);
	}

	@Override
	public boolean requiresOptimisticLocking() {
		return false;
	}

	@Override
	public Object[] extractKeyValues(ResultSet resultSet) throws SQLException {
		return super.extractKeyValues(resultSet);
	}

	@Override
	public int bindKeyValues(Object[] keyValues, PreparedStatement stmt, final int startIndex) throws SQLException {
		return super.bindKeyValues(keyValues, stmt, startIndex);
	}

    @Override
	public Object getKeyFromEntity(final Object entity) {
		return (((GVPF)entity).get$key());
	}

}
