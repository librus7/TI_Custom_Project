package com.misys.tiplus2.customisation.entity.persister;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.misys.tiplus2.persistent.EntityPersister;
import com.misys.tiplus2.customisation.entity.FVPF;
import com.misys.tiplus2.customisation.entity.FVPF.Key_FVPF;

@SuppressWarnings("unchecked")
public class FVPFPersister extends EntityPersister {

	// This code will be generated by the builder 
	
	public FVPFPersister() {
		setKeyMembers(new MemberDescriptor[] {
            new MemberDescriptor("bank_ent", "FVPF.BANK_ENT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvbrnm", "FVPF.FVBRNM", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvccy", "FVPF.FVCCY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcus1sbb", "FVPF.FVCUS1SBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcus1", "FVPF.FVCUS1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fving", "FVPF.FVING", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvmvt", "FVPF.FVMVT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvprf", "FVPF.FVPRF", getBinderFactory().getBinderForType("String")),
		});
			
		setMembers(new MemberDescriptor[] {
            new MemberDescriptor("autoch53", "FVPF.AUTOCH53", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvoani", "FVPF.FVOANI", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("cheque44", "FVPF.CHEQUE44", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvcxm", "FVPF.TIFVCXM", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvcvr", "FVPF.TIFVCVR", getBinderFactory().getBinderForType("LongVarchar")),
            new MemberDescriptor("timecod1_1", "FVPF.TIMECOD1_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet1_1", "FVPF.TIMEDET1_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecod2_1", "FVPF.TIMECOD2_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet2_1", "FVPF.TIMEDET2_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecod3_1", "FVPF.TIMECOD3_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet3_1", "FVPF.TIMEDET3_1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvswacc", "FVPF.TIFVSWACC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvswb", "FVPF.FVSWB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvswbr", "FVPF.FVSWBR", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcnas", "FVPF.FVCNAS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvswl", "FVPF.FVSWL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcus1sbbi", "FVPF.FVCUS1SBBI", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcus1i", "FVPF.FVCUS1I", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvna1", "FVPF.FVNA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvna2", "FVPF.FVNA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvna3", "FVPF.FVNA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvna4", "FVPF.FVNA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvtlit", "FVPF.FVTLIT", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvintac", "FVPF.TIFVINTAC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirac", "FVPF.TIFVIRAC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("accoun72", "FVPF.ACCOUN72", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirs1", "FVPF.TIFVIRS1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirs4", "FVPF.TIFVIRS4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirs2", "FVPF.TIFVIRS2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirs3", "FVPF.TIFVIRS3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvircsbb", "FVPF.TIFVIRCSBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvircus", "FVPF.TIFVIRCUS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvira1", "FVPF.TIFVIRA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvira2", "FVPF.TIFVIRA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvira3", "FVPF.TIFVIRA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvira4", "FVPF.TIFVIRA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvirtl", "FVPF.TIFVIRTL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvexrat", "FVPF.TIFVEXRAT", getBinderFactory().getBinderForType("BigDecimal")),
            new MemberDescriptor("tifvinamt", "FVPF.TIFVINAMT", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvinccy", "FVPF.TIFVINCCY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins1cd", "FVPF.TIFVINS1CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins1tx", "FVPF.TIFVINS1TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins2cd", "FVPF.TIFVINS2CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins2tx", "FVPF.TIFVINS2TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins3cd", "FVPF.TIFVINS3CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins3tx", "FVPF.TIFVINS3TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins4cd", "FVPF.TIFVINS4CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins4tx", "FVPF.TIFVINS4TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins5cd", "FVPF.TIFVINS5CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins5tx", "FVPF.TIFVINS5TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins6cd", "FVPF.TIFVINS6CD", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvins6tx", "FVPF.TIFVINS6TX", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg1am", "FVPF.TIFVCHG1AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg1cy", "FVPF.TIFVCHG1CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg2am", "FVPF.TIFVCHG2AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg2cy", "FVPF.TIFVCHG2CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg3am", "FVPF.TIFVCHG3AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg3cy", "FVPF.TIFVCHG3CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg4am", "FVPF.TIFVCHG4AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg4cy", "FVPF.TIFVCHG4CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg5am", "FVPF.TIFVCHG5AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg5cy", "FVPF.TIFVCHG5CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvchg6am", "FVPF.TIFVCHG6AM", getBinderFactory().getBinderForType("Long")),
            new MemberDescriptor("tifvchg6cy", "FVPF.TIFVCHG6CY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvregrep", "FVPF.TIFVREGREP", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvsvclvl", "FVPF.TIFVSVCLVL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvtrntyp", "FVPF.TIFVTRNTYP", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvmsgtyp", "FVPF.TIFVMSGTYP", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvocacc", "FVPF.TIFVOCACC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvs1", "FVPF.TIFVS1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvs4", "FVPF.TIFVS4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvs2", "FVPF.TIFVS2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvs3", "FVPF.TIFVS3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvocsbb", "FVPF.TIFVOCSBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvocus", "FVPF.TIFVOCUS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvoca1", "FVPF.TIFVOCA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvoca2", "FVPF.TIFVOCA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvoca3", "FVPF.TIFVOCA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvoca4", "FVPF.TIFVOCA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvoctl", "FVPF.TIFVOCTL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvpay", "FVPF.TIFVPAY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("accoun54", "FVPF.ACCOUN54", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcs1", "FVPF.TIFVRCS1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcs4", "FVPF.TIFVRCS4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcs2", "FVPF.TIFVRCS2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcs3", "FVPF.TIFVRCS3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcsbb", "FVPF.TIFVRCSBB", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcus", "FVPF.TIFVRCUS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrca1", "FVPF.TIFVRCA1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrca2", "FVPF.TIFVRCA2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrca3", "FVPF.TIFVRCA3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrca4", "FVPF.TIFVRCA4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrctl", "FVPF.TIFVRCTL", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvrcac", "FVPF.TIFVRCAC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvchg", "FVPF.FVCHG", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("tifvstr", "FVPF.TIFVSTR", getBinderFactory().getBinderForType("LongVarchar")),
            new MemberDescriptor("tifvsetby", "FVPF.TIFVSETBY", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode1", "FVPF.TIMECODE1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet1", "FVPF.TIMEDET1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode2", "FVPF.TIMECODE2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet2", "FVPF.TIMEDET2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timecode3", "FVPF.TIMECODE3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("timedet3", "FVPF.TIMEDET3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvclci", "FVPF.FVCLCI", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvclc", "FVPF.FVCLC", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcusi", "FVPF.FVCUSI", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvcus", "FVPF.FVCUS", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr1", "FVPF.FVNR1", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr2", "FVPF.FVNR2", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr3", "FVPF.FVNR3", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr4", "FVPF.FVNR4", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr5", "FVPF.FVNR5", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("fvnr6", "FVPF.FVNR6", getBinderFactory().getBinderForType("String")),
            new MemberDescriptor("mnt_in_bo", "FVPF.MNT_IN_BO", getBinderFactory().getBinderForType("String")),
		});

		setForeignKeyMappings(new ForeignKeyMappingDescriptor[] {
		});
	}

    private static final String tableName = "FVPF";

    /**
     * Gets the table name - in this case FVPF
     * <p>
     * Note that the <i>schema</i> must be prefixed to this when constructing
     * SQL statements, for example: <code>schema.FVPF</code>
     * 
     * @return the table name
     */
	@Override
	public String getTableName() {       
		return tableName;
	}

	@Override
	public Class<?> getEntityClass() {
		return FVPF.class;
	}

	public Class<?> getKeyClass() {
		return Key_FVPF.class;
	}

	@Override
	public FVPF constructEntity(final Object[] keyValues, final Object[] resultRow) {
		final FVPF entity = new FVPF();
		
		// Key members
		final Key_FVPF key = entity.get$key();
		assignKeyValues(key, keyValues);

		assignMemberValues(entity, resultRow);
		
		return entity;
	}
	
	@Override
	public Key_FVPF constructKey(final Object[] keyValues) {
		final Key_FVPF key = new Key_FVPF();
		assignKeyValues(key, keyValues);
		return key;
	}
	
	@Override
	public void assignKeyValues(final Object object, final Object[] resultRow) {
		final Key_FVPF result = (Key_FVPF)object;
		int index = 0;
		result.setBank_ent((java.lang.String)resultRow[index++]);
		result.setFvbrnm((java.lang.String)resultRow[index++]);
		result.setFvccy((java.lang.String)resultRow[index++]);
		result.setFvcus1sbb((java.lang.String)resultRow[index++]);
		result.setFvcus1((java.lang.String)resultRow[index++]);
		result.setFving((java.lang.String)resultRow[index++]);
		result.setFvmvt((java.lang.String)resultRow[index++]);
		result.setFvprf((java.lang.String)resultRow[index++]);
	}
	
	@Override
	public void assignMemberValues(final Object object, final Object[] resultRow) {
		final FVPF result = (FVPF)object;
		int index = 0;
		result.setAutoch53((java.lang.String)resultRow[index++]);
		result.setFvoani((java.lang.String)resultRow[index++]);
		result.setCheque44((java.lang.String)resultRow[index++]);
		result.setTifvcxm((java.lang.String)resultRow[index++]);
		result.setTifvcvr((java.lang.String)resultRow[index++]);
		result.setTimecod1_1((java.lang.String)resultRow[index++]);
		result.setTimedet1_1((java.lang.String)resultRow[index++]);
		result.setTimecod2_1((java.lang.String)resultRow[index++]);
		result.setTimedet2_1((java.lang.String)resultRow[index++]);
		result.setTimecod3_1((java.lang.String)resultRow[index++]);
		result.setTimedet3_1((java.lang.String)resultRow[index++]);
		result.setTifvswacc((java.lang.String)resultRow[index++]);
		result.setFvswb((java.lang.String)resultRow[index++]);
		result.setFvswbr((java.lang.String)resultRow[index++]);
		result.setFvcnas((java.lang.String)resultRow[index++]);
		result.setFvswl((java.lang.String)resultRow[index++]);
		result.setFvcus1sbbi((java.lang.String)resultRow[index++]);
		result.setFvcus1i((java.lang.String)resultRow[index++]);
		result.setFvna1((java.lang.String)resultRow[index++]);
		result.setFvna2((java.lang.String)resultRow[index++]);
		result.setFvna3((java.lang.String)resultRow[index++]);
		result.setFvna4((java.lang.String)resultRow[index++]);
		result.setFvtlit((java.lang.String)resultRow[index++]);
		result.setTifvintac((java.lang.String)resultRow[index++]);
		result.setTifvirac((java.lang.String)resultRow[index++]);
		result.setAccoun72((java.lang.String)resultRow[index++]);
		result.setTifvirs1((java.lang.String)resultRow[index++]);
		result.setTifvirs4((java.lang.String)resultRow[index++]);
		result.setTifvirs2((java.lang.String)resultRow[index++]);
		result.setTifvirs3((java.lang.String)resultRow[index++]);
		result.setTifvircsbb((java.lang.String)resultRow[index++]);
		result.setTifvircus((java.lang.String)resultRow[index++]);
		result.setTifvira1((java.lang.String)resultRow[index++]);
		result.setTifvira2((java.lang.String)resultRow[index++]);
		result.setTifvira3((java.lang.String)resultRow[index++]);
		result.setTifvira4((java.lang.String)resultRow[index++]);
		result.setTifvirtl((java.lang.String)resultRow[index++]);
		result.setTifvexrat((java.math.BigDecimal)resultRow[index++]);
		result.setTifvinamt((java.lang.Long)resultRow[index++]);
		result.setTifvinccy((java.lang.String)resultRow[index++]);
		result.setTifvins1cd((java.lang.String)resultRow[index++]);
		result.setTifvins1tx((java.lang.String)resultRow[index++]);
		result.setTifvins2cd((java.lang.String)resultRow[index++]);
		result.setTifvins2tx((java.lang.String)resultRow[index++]);
		result.setTifvins3cd((java.lang.String)resultRow[index++]);
		result.setTifvins3tx((java.lang.String)resultRow[index++]);
		result.setTifvins4cd((java.lang.String)resultRow[index++]);
		result.setTifvins4tx((java.lang.String)resultRow[index++]);
		result.setTifvins5cd((java.lang.String)resultRow[index++]);
		result.setTifvins5tx((java.lang.String)resultRow[index++]);
		result.setTifvins6cd((java.lang.String)resultRow[index++]);
		result.setTifvins6tx((java.lang.String)resultRow[index++]);
		result.setTifvchg1am((java.lang.Long)resultRow[index++]);
		result.setTifvchg1cy((java.lang.String)resultRow[index++]);
		result.setTifvchg2am((java.lang.Long)resultRow[index++]);
		result.setTifvchg2cy((java.lang.String)resultRow[index++]);
		result.setTifvchg3am((java.lang.Long)resultRow[index++]);
		result.setTifvchg3cy((java.lang.String)resultRow[index++]);
		result.setTifvchg4am((java.lang.Long)resultRow[index++]);
		result.setTifvchg4cy((java.lang.String)resultRow[index++]);
		result.setTifvchg5am((java.lang.Long)resultRow[index++]);
		result.setTifvchg5cy((java.lang.String)resultRow[index++]);
		result.setTifvchg6am((java.lang.Long)resultRow[index++]);
		result.setTifvchg6cy((java.lang.String)resultRow[index++]);
		result.setTifvregrep((java.lang.String)resultRow[index++]);
		result.setTifvsvclvl((java.lang.String)resultRow[index++]);
		result.setTifvtrntyp((java.lang.String)resultRow[index++]);
		result.setTifvmsgtyp((java.lang.String)resultRow[index++]);
		result.setTifvocacc((java.lang.String)resultRow[index++]);
		result.setTifvs1((java.lang.String)resultRow[index++]);
		result.setTifvs4((java.lang.String)resultRow[index++]);
		result.setTifvs2((java.lang.String)resultRow[index++]);
		result.setTifvs3((java.lang.String)resultRow[index++]);
		result.setTifvocsbb((java.lang.String)resultRow[index++]);
		result.setTifvocus((java.lang.String)resultRow[index++]);
		result.setTifvoca1((java.lang.String)resultRow[index++]);
		result.setTifvoca2((java.lang.String)resultRow[index++]);
		result.setTifvoca3((java.lang.String)resultRow[index++]);
		result.setTifvoca4((java.lang.String)resultRow[index++]);
		result.setTifvoctl((java.lang.String)resultRow[index++]);
		result.setTifvpay((java.lang.String)resultRow[index++]);
		result.setAccoun54((java.lang.String)resultRow[index++]);
		result.setTifvrcs1((java.lang.String)resultRow[index++]);
		result.setTifvrcs4((java.lang.String)resultRow[index++]);
		result.setTifvrcs2((java.lang.String)resultRow[index++]);
		result.setTifvrcs3((java.lang.String)resultRow[index++]);
		result.setTifvrcsbb((java.lang.String)resultRow[index++]);
		result.setTifvrcus((java.lang.String)resultRow[index++]);
		result.setTifvrca1((java.lang.String)resultRow[index++]);
		result.setTifvrca2((java.lang.String)resultRow[index++]);
		result.setTifvrca3((java.lang.String)resultRow[index++]);
		result.setTifvrca4((java.lang.String)resultRow[index++]);
		result.setTifvrctl((java.lang.String)resultRow[index++]);
		result.setTifvrcac((java.lang.String)resultRow[index++]);
		result.setFvchg((java.lang.String)resultRow[index++]);
		result.setTifvstr((java.lang.String)resultRow[index++]);
		result.setTifvsetby((java.lang.String)resultRow[index++]);
		result.setTimecode1((java.lang.String)resultRow[index++]);
		result.setTimedet1((java.lang.String)resultRow[index++]);
		result.setTimecode2((java.lang.String)resultRow[index++]);
		result.setTimedet2((java.lang.String)resultRow[index++]);
		result.setTimecode3((java.lang.String)resultRow[index++]);
		result.setTimedet3((java.lang.String)resultRow[index++]);
		result.setFvclci((java.lang.String)resultRow[index++]);
		result.setFvclc((java.lang.String)resultRow[index++]);
		result.setFvcusi((java.lang.String)resultRow[index++]);
		result.setFvcus((java.lang.String)resultRow[index++]);
		result.setFvnr1((java.lang.String)resultRow[index++]);
		result.setFvnr2((java.lang.String)resultRow[index++]);
		result.setFvnr3((java.lang.String)resultRow[index++]);
		result.setFvnr4((java.lang.String)resultRow[index++]);
		result.setFvnr5((java.lang.String)resultRow[index++]);
		result.setFvnr6((java.lang.String)resultRow[index++]);
		result.setMnt_in_bo((java.lang.String)resultRow[index++]);
	}

	@Override
	public Object[] getKeyMemberValues(final Object object) {
		final Key_FVPF entity = (Key_FVPF)object;
		final Object[] result = new Object[8];
		int index = 0;
		result[index++] = entity.getBank_ent();
		result[index++] = entity.getFvbrnm();
		result[index++] = entity.getFvccy();
		result[index++] = entity.getFvcus1sbb();
		result[index++] = entity.getFvcus1();
		result[index++] = entity.getFving();
		result[index++] = entity.getFvmvt();
		result[index++] = entity.getFvprf();
		return result;
	}

	@Override
	public Object[] getMemberValues(final Object object) {
		final FVPF entity = (FVPF)object;
		final Object[] result = new Object[114];
		int index = 0;
		result[index++] = entity.getAutoch53();
		result[index++] = entity.getFvoani();
		result[index++] = entity.getCheque44();
		result[index++] = entity.getTifvcxm();
		result[index++] = entity.getTifvcvr();
		result[index++] = entity.getTimecod1_1();
		result[index++] = entity.getTimedet1_1();
		result[index++] = entity.getTimecod2_1();
		result[index++] = entity.getTimedet2_1();
		result[index++] = entity.getTimecod3_1();
		result[index++] = entity.getTimedet3_1();
		result[index++] = entity.getTifvswacc();
		result[index++] = entity.getFvswb();
		result[index++] = entity.getFvswbr();
		result[index++] = entity.getFvcnas();
		result[index++] = entity.getFvswl();
		result[index++] = entity.getFvcus1sbbi();
		result[index++] = entity.getFvcus1i();
		result[index++] = entity.getFvna1();
		result[index++] = entity.getFvna2();
		result[index++] = entity.getFvna3();
		result[index++] = entity.getFvna4();
		result[index++] = entity.getFvtlit();
		result[index++] = entity.getTifvintac();
		result[index++] = entity.getTifvirac();
		result[index++] = entity.getAccoun72();
		result[index++] = entity.getTifvirs1();
		result[index++] = entity.getTifvirs4();
		result[index++] = entity.getTifvirs2();
		result[index++] = entity.getTifvirs3();
		result[index++] = entity.getTifvircsbb();
		result[index++] = entity.getTifvircus();
		result[index++] = entity.getTifvira1();
		result[index++] = entity.getTifvira2();
		result[index++] = entity.getTifvira3();
		result[index++] = entity.getTifvira4();
		result[index++] = entity.getTifvirtl();
		result[index++] = entity.getTifvexrat();
		result[index++] = entity.getTifvinamt();
		result[index++] = entity.getTifvinccy();
		result[index++] = entity.getTifvins1cd();
		result[index++] = entity.getTifvins1tx();
		result[index++] = entity.getTifvins2cd();
		result[index++] = entity.getTifvins2tx();
		result[index++] = entity.getTifvins3cd();
		result[index++] = entity.getTifvins3tx();
		result[index++] = entity.getTifvins4cd();
		result[index++] = entity.getTifvins4tx();
		result[index++] = entity.getTifvins5cd();
		result[index++] = entity.getTifvins5tx();
		result[index++] = entity.getTifvins6cd();
		result[index++] = entity.getTifvins6tx();
		result[index++] = entity.getTifvchg1am();
		result[index++] = entity.getTifvchg1cy();
		result[index++] = entity.getTifvchg2am();
		result[index++] = entity.getTifvchg2cy();
		result[index++] = entity.getTifvchg3am();
		result[index++] = entity.getTifvchg3cy();
		result[index++] = entity.getTifvchg4am();
		result[index++] = entity.getTifvchg4cy();
		result[index++] = entity.getTifvchg5am();
		result[index++] = entity.getTifvchg5cy();
		result[index++] = entity.getTifvchg6am();
		result[index++] = entity.getTifvchg6cy();
		result[index++] = entity.getTifvregrep();
		result[index++] = entity.getTifvsvclvl();
		result[index++] = entity.getTifvtrntyp();
		result[index++] = entity.getTifvmsgtyp();
		result[index++] = entity.getTifvocacc();
		result[index++] = entity.getTifvs1();
		result[index++] = entity.getTifvs4();
		result[index++] = entity.getTifvs2();
		result[index++] = entity.getTifvs3();
		result[index++] = entity.getTifvocsbb();
		result[index++] = entity.getTifvocus();
		result[index++] = entity.getTifvoca1();
		result[index++] = entity.getTifvoca2();
		result[index++] = entity.getTifvoca3();
		result[index++] = entity.getTifvoca4();
		result[index++] = entity.getTifvoctl();
		result[index++] = entity.getTifvpay();
		result[index++] = entity.getAccoun54();
		result[index++] = entity.getTifvrcs1();
		result[index++] = entity.getTifvrcs4();
		result[index++] = entity.getTifvrcs2();
		result[index++] = entity.getTifvrcs3();
		result[index++] = entity.getTifvrcsbb();
		result[index++] = entity.getTifvrcus();
		result[index++] = entity.getTifvrca1();
		result[index++] = entity.getTifvrca2();
		result[index++] = entity.getTifvrca3();
		result[index++] = entity.getTifvrca4();
		result[index++] = entity.getTifvrctl();
		result[index++] = entity.getTifvrcac();
		result[index++] = entity.getFvchg();
		result[index++] = entity.getTifvstr();
		result[index++] = entity.getTifvsetby();
		result[index++] = entity.getTimecode1();
		result[index++] = entity.getTimedet1();
		result[index++] = entity.getTimecode2();
		result[index++] = entity.getTimedet2();
		result[index++] = entity.getTimecode3();
		result[index++] = entity.getTimedet3();
		result[index++] = entity.getFvclci();
		result[index++] = entity.getFvclc();
		result[index++] = entity.getFvcusi();
		result[index++] = entity.getFvcus();
		result[index++] = entity.getFvnr1();
		result[index++] = entity.getFvnr2();
		result[index++] = entity.getFvnr3();
		result[index++] = entity.getFvnr4();
		result[index++] = entity.getFvnr5();
		result[index++] = entity.getFvnr6();
		result[index++] = entity.getMnt_in_bo();
		return result;
	}

	@Override
	public Object[] getMemberValuesForMember(final String memberName, final Object object) {
		throw new IllegalArgumentException("Not a complex member: " + memberName);
	}

	@Override
	public boolean requiresOptimisticLocking() {
		return false;
	}

	@Override
	public Object[] extractKeyValues(ResultSet resultSet) throws SQLException {
		return super.extractKeyValues(resultSet);
	}

	@Override
	public int bindKeyValues(Object[] keyValues, PreparedStatement stmt, final int startIndex) throws SQLException {
		return super.bindKeyValues(keyValues, stmt, startIndex);
	}

    @Override
	public Object getKeyFromEntity(final Object entity) {
		return (((FVPF)entity).get$key());
	}

}
